#!/bin/bash
#
# Synchronises the image ($FULL_BUILD_NAME) for a given repoistory ($REPO_DIR)
# by building it and then deploying the built image/artefact to a remote
# registry/repoistory ($DOCKER_HUB_USER).

set -x

# Assert connected to Docker daemon
D_SERVER_VERSION="$(docker version --format '{{.Server.Version}}')"
if [ -z "$D_SERVER_VERSION" ]; then
  echo "Docker server version not found."
  exit 1
fi
# Assert required env vars are set
if [ ! -d "$REPO_DIR" ]; then
  echo "REPO_DIR not found (Set to '$REPO_DIR')."
  exit 1
fi
if [ -z "$DOCKER_HUB_USER" ]; then
  echo "DOCKER_HUB_USER not set."
  exit 1
fi
if [ -z "$DOCKER_HUB_PASS" ]; then
  echo "DOCKER_HUB_PASS not set."
  exit 1
fi
if [ -z "$FULL_BUILD_NAME" ]; then
  echo "FULL_BUILD_NAME not set."
  exit 1
fi


echo "Building '$FULL_BUILD_NAME' (in $REPO_DIR)..."
set -e \
  && cd $REPO_DIR \
  && docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS \
  && docker build -t $FULL_BUILD_NAME . \
  && docker push $FULL_BUILD_NAME
